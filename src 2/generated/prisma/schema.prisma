// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String?
  phone     String?
  bookings  Booking[]
  createdAt DateTime  @default(now())
}

model Hotel {
  id          Int          @id @default(autoincrement())
  name        String
  city        String
  address     String
  description String?
  images      HotelImage[]
  roomTypes   RoomType[]
  createdAt   DateTime     @default(now())
}

model HotelImage {
  id        Int    @id @default(autoincrement())
  hotelId   Int
  hotel     Hotel  @relation(fields: [hotelId], references: [id])
  url       String
  sortOrder Int    @default(1)
}

model RoomType {
  id        Int       @id @default(autoincrement())
  hotelId   Int
  hotel     Hotel     @relation(fields: [hotelId], references: [id])
  name      String
  price     Int // 單位: 每晚金額
  total     Int // 總間數
  bookings  Booking[]
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Booking {
  id           Int           @id @default(autoincrement())
  userId       Int
  user         User          @relation(fields: [userId], references: [id])
  roomTypeId   Int
  roomType     RoomType      @relation(fields: [roomTypeId], references: [id])
  checkIn      DateTime
  checkOut     DateTime
  guests       Int
  contactName  String
  contactPhone String
  status       BookingStatus @default(CONFIRMED)
  createdAt    DateTime      @default(now())
}

enum BookingStatus {
  CONFIRMED
  CANCELLED
}
